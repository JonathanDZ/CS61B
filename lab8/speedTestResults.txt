 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

 What would you like L to be?: 10

 Enter # strings to insert into each map: 100000
 class hashmap.MyHashMapALBuckets: 0.08 sec
 class hashmap.MyHashMapLLBuckets: 0.11 sec
 class hashmap.MyHashMapTSBuckets: 0.10 sec
 class hashmap.MyHashMapHSBuckets: 0.11 sec
 class hashmap.MyHashMapPQBuckets: 0.09 sec

 Enter # strings to insert into each map: 1000000
 class hashmap.MyHashMapALBuckets: 0.61 sec
 class hashmap.MyHashMapLLBuckets: 0.72 sec
 class hashmap.MyHashMapTSBuckets: 0.84 sec
 class hashmap.MyHashMapHSBuckets: 1.00 sec
 class hashmap.MyHashMapPQBuckets: 0.91 sec

 This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.25 sec

Enter # strings to insert into hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.00 sec

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 2

Enter # strings to insert into hashmap.ULLMap: 100000
class hashmap.ULLMap: 0.14 sec

Enter # strings to insert into your hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.02 sec

Enter # strings to insert into hashmap.ULLMap: 1000000
class hashmap.ULLMap: 0.94 sec

Enter # strings to insert into your hashmap.MyHashMap: 1000000
class hashmap.MyHashMap: 0.06 sec

Enter # strings to insert into Java's HashMap: 1000000
Java's Built-in HashMap: 0.03 sec

